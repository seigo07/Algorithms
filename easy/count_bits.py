
'''
与えられた整数 n に対して、0 から n までの各整数 i の 2進数表現に含まれる 1 の個数を配列として返す
'''


def count_bits(n):
    # 長さ n+1 の空配列 ans を初期化
    ans = [0] * (n + 1)
    # 各数 i に対して、i の 1 の数を ans[i] = ans[i >> 1] + (i & 1) で計算
    for i in range(1, n + 1):
        # i >> 1 は i を1ビット右シフト（= i // 2）
        # i & 1 は i の最下位ビットが 1 か 0 か
        ans[i] = ans[i >> 1] + (i & 1)
    return ans

'''
# 実行例 n =5
i = 0: 0b000 → 0
i = 1: 0b001 → 1
i = 2: 0b010 → 1
i = 3: 0b011 → 2
i = 4: 0b100 → 1
i = 5: 0b101 → 2
'''
n = 5
print(count_bits(n))  # 出力: [0, 1, 1, 2, 1, 2]
